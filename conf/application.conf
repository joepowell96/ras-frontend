# Copyright 2017 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "common.conf"

appName="ras-frontend"
application.router=prod.Routes

application.global= config.FrontendGlobal

play.filters.headers.contentSecurityPolicy= "default-src 'self' 'unsafe-inline' localhost:9000 localhost:9032 www.google-analytics.com data:"

# Play Modules
# ~~~~
# Additional play modules can be added here
play.modules.enabled += "com.kenshoo.play.metrics.PlayModule"

# Global request handler
# ~~~~
# Set to the object handler for migrated 2.3 services
play.http.requestHandler = "play.api.http.GlobalSettingsHttpRequestHandler"

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
# Not set here so that MDTP frontends share the same secret key in the local environment
# (see common.conf in frontend-bootstrap).
# In server environments the secret comes from app-config-common
# play.crypto.secret="dh50eDRQJcJeEOeNDnjtUZ5Ihz9FjoSdvY5nIinv9QqN2FqbNJ5luD8zI0cD3hcr"

controllers {

    com.kenshoo.play.metrics.MetricsController = {
        needsAuth = false
        needsLogging = false
        needsAuditing = false
    }
  controllers.RasController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }
  controllers.MemberDetailsController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }
  controllers.ResultsController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }
    controllers {
        Assets.needsAuditing = false
    }
}

microservice {
    metrics {
        graphite {
            host = localhost
            port = 2003
            prefix = play.${appName}.
            enabled = false
        }
    }

    services {

        cachable {
            session-cache {
                domain = keystore
            }
        }

        keystore {
            host = localhost
            port = 8400
        }

        auth {
          host = localhost
          port = 8500
        }

        contact-frontend {
            host = localhost
            port = 9250
        }

        datastream {
            host = localhost
            port = 8100
        }

        customer-matching {
            host = localhost
            port = 9671
        }

        file-upload {
            host = localhost
            port = 8898
        }

        file-upload-frontend {
            host = localhost
            port = 8899
        }

        relief-at-source {
            host = localhost
            port = 9669
        }

        ras-frontend {
            host = localhost
            port = 9673
        }

    }
}

metrics {
    name = ${appName}
    rateUnit = SECONDS
    durationUnit = SECONDS
    showSamples = true
    jvm = true
    enabled = true
}

auditing {
  enabled=false
  traceRequests=true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

google-analytics {
  token=N/A
  host=auto
}

assets {
  version = "2.246.0"
  version = ${?ASSETS_FRONTEND_VERSION}
  url = "http://localhost:9032/assets/"
}

ca-frontend {
    host = "http://localhost:9025"
}

gg-urls {
  logout-callback.url = "http://localhost:9673/relief-at-source/"
}

ras-frontend-url-suffix = "relief-at-source"
customer-matching-environment-suffix = "match"
customer-matching-links-suffix = "matched"
residency-status-url = "/relief-at-source/customer/%s/residency-status"
file-upload-url-suffix = "file-upload/envelopes"
file-upload-frontend-url-suffix = "file-upload/upload/envelopes"

file-upload-constraints {
    maxItems = 1
    maxSize = "2MB"
    maxSizePerItem = "2MB"
    allowZeroLengthFiles = false
}
